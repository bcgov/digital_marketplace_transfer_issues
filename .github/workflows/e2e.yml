name: End-to-end tests
on: [push]
jobs:
  cypress:
    runs-on: ubuntu-latest
    env:
      POSTGRES_URL: "foobar"
      COOKIE_SECRET: "foobar"
      MAILER_HOST: "foobar"
      MAILER_PORT: "321"
    # stop the job if it runs over 10 minutes to prevent a hanging process from using all your CI minutes
    timeout-minutes: 10

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        ports:
          - "5432:5432"
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # - name: Install dependencies
      #   run: npm ci

      # - name: Connect to PostgreSQL
      #   run: npm run migrations:latest
      #   # Environment variables used by the `client.js` script to create a new PostgreSQL table.
      #   env:
      #     # The hostname used to communicate with the PostgreSQL service container
      #     POSTGRES_HOST: postgres
      #     # The default PostgreSQL port
      #     POSTGRES_PORT: 5432
      #     POSTGRES_PASSWORD: postgres

      # - name: Cypress
      #   run: npm ./node_modules/.bin/cypress run


        # Install NPM dependencies, cache them correctly
      # and run all Cypress tests
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          build: npm run build
          start: npm run migrations,npm run start
          wait-on: 'http://localhost:3000'
